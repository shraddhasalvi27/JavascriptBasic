JavaScript Beginning to Mastery Syllabus

JavaScript vs EcmaScript 
Install vscode and run first program

Basics of Programming in JavaScript
Hello world program - done
Declare variable using var - done
More about variable - done
Let - done
Const - done
String Indexing - done
Useful string methods - done 
Template Strings - done
Null, undefined, BigInt, typeof - done
Booleans and Comparison Operator - done
Truthy and Falsy Values - done
If else statement - done
Ternary Operator - 
&& || operator - done
Nested if else  - done
If elseif else - done
Switch  - done
While loop - done
While loop examples -done
For loop -done
For loop examples - done
Break and continue keyword - done
Do while loop - done



Arrays in JavaScript - done
Intro to arrays - done
Push pop shift unshift - done
Primitive vs reference data types - done
Clone array & spread operator - done
For loop - 
use const for creating arrays - done
While loop in array
For of loop
For in loop
Array destructuring


Objects in JavaScript
Intro to objects
Dot vs Bracket Notation
Iterate objects
Computed properties
Spread operator in objects
Object Destructuring
Objects inside Array
Nested Destructuring

Functions in JavaScript
Function declaration
Function Expression
Arrow Functions
Function declarations are hoisted  (covered in great detail , later in this course)
Function inside function
Lexical Scope
Block Scope Vs Function Scope
Default Parameters
Rest Parameters
Parameter Destructuring
Very brief intro to callback functions(covered in great detail , later in this course)
Functions returning Functions

Very Important Array Methods
Foreach method
Map method
Filter
Reduce
Sort
Find
Every
Some
Fill method
Splice method


More useful things 
Iterables
Sets
Maps
Object.assign
Optional chaining


Object Oriented JavaScript / Prototypal Inheritance
Methods
This keyword, Window object
Call , apply and bind method
Some warnings
This inside arrow functions
Short syntax for methods
Factory functions & discuss some memory related problems
First solution to that problem
Why that solution isnâ€™t that great
What is __proto__ , [[prototype]]
What is prototype
Use prototype
New keyword
Constructor function with new keyword
More discussion about proto and prototype
Class keyword
Example using class keyword
Super keyword
Method overriding
Getters and setters
Static methods and properties  - target

How JavaScript Works
Global Execution context
This and window in global execution context
Hoisting
Are let and const are hoisted ? What is a reference Error ? 
Function execution context
Scope chain and lexical environment
Closures
Intro to closures
Closure example 1
Closure Example 2
Closure Example 3

DOM Tutorial

HTML and CSS Crash course ( Around 30-40 minutes)
Async vs defer
Select elements using id
querySelector
textContent & innerText
Change the styles of elements using js
Get and set attributes
Select multiple elements and loop through them
innerHTML
Deeply understand dom tree, root node , element nodes, text nodes
classList
Add new elements to page
Create elements
Insert adjacent elements
Clone nodes
More methods to add elements on page
How to get the dimensions of the element

Events
Intro to events
This keyword inside eventListener callback
Add events on multiple elements
Event object
How event listener works
Practice with events
Create demo project
More events
Event bubbling
Event Capturing
Event delegation 
Create Project using event delegation

Asynchronous JavaScript
Is Javascript a synchronous or asynchronous programming language ? 
SetTimeout()
SetTimeout() with 0 millisecond
Callback Queue
SetInterval and create little project with setInterval
Understand callbacks in general
Callbacks in asynchronous programming 
Callback Hell and Pyramid of dom

Promises, network request
Intro to promises
Microtask Queue
Function that returns promise
Promise and settimeout
Promise.resolve and more about then method
Convert nested Callbacks to flat code using promises
Intro to Ajax, HTTP Request
XHR requests
Error handling in XHR requests
XHR request Chaining 
Promisifying XHR requests and chaining using then method
Fetch API
Error Handling in Fetch API
Consume Promises with async and Await

ES6 (ES2015) Modules

Split code into multiple files using ES6 modules.

Congratulations 
Now you know javascript in Great Details
What next ? 




Multiple Projects
Interview Questions
Web Performance
Testing



